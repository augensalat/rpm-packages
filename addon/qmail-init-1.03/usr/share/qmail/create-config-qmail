#!/bin/sh
#
# check if we are started as root
# only one of UID and USER must be set correctly
#
if test "$UID" != 0 -a "$USER" != root; then
    echo "You must be root to start $0."
    exit 1
fi

#
# check for /etc/sysconfig/qmail
#
if test ! -s /etc/sysconfig/qmail ; then
    echo "No /etc/sysconfig/qmail found."
    exit 1
fi
. /etc/sysconfig/qmail

test "$QMAIL_CREATE_CONFIG" = yes || exit 0

if test -s /etc/sysconfig/mail ; then
    . /etc/sysconfig/mail
    test "$MAIL_CREATE_CONFIG" = yes || exit 0
fi

#
# set qmail config dirs
#
QMAILDIR=/etc/qmail
QMAILCTL=$QMAILDIR/control

#
# define preamble of config files
#
PREAMBLE="#
#
# Automatically generated on `env LANG=C date`
#
# PLEASE DO NOT EDIT THIS FILE
#
# Instead edit /etc/sysconfig/qmail and restart the server.
#
#"

umask 022

# Try to get a valid hostname...
FQHOSTNAME=$(/bin/hostname -f | tr A-Z a-z)
# check whether hostname contains at least one dot...
echo $FQHOSTNAME | grep "\." >/dev/null || FQHOSTNAME=""

if test -z "$FQHOSTNAME" ; then
    # still no valid hostname? Then read /etc/HOSTNAME
    test -s /etc/HOSTNAME && FQHOSTNAME="`head -1 /etc/HOSTNAME`"
    # check whether hostname contains at least one dot...
    echo $FQHOSTNAME | grep "\." >/dev/null || FQHOSTNAME=""
    # still no valid hostname? :-( set hostname to linux.local
    test -z "$FQHOSTNAME" && FQHOSTNAME=linux.local
fi

#
# set the fully-qualified name of the current host. (me)
#
echo >$QMAILCTL/me ${QMAIL_ME:-"$FQHOSTNAME"}

# artificial smtp routing
if test -n "$QMAIL_SMTPROUTES" ; then
    cat <<ETX >$QMAILCTL/smtproutes
$PREAMBLE
ETX
    echo $QMAIL_SMTPROUTES | sed 's/[[:space:]]\{1,\}/\n/g' >>$QMAILCTL/smtproutes
elif test -n "$QMAIL_RELAYHOST" ; then
    cat <<ETX >$QMAILCTL/smtproutes
$PREAMBLE
:$QMAIL_RELAYHOST
ETX
else
    rm -f $QMAILCTL/smtproutes
fi

# defaulthost
host=$QMAIL_DEFAULTHOST
test -n "$host" && \
    echo $host | grep "\." >/dev/null || host=""
if test -z "$host" ; then
    rm -f $QMAILCTL/defaulthost
else
    echo $host >$QMAILCTL/defaulthost
fi

# locals
cat <<ETX >$QMAILCTL/locals
$PREAMBLE
ETX

if test -z "$QMAIL_LOCALDOMAINS" ; then
(
  echo localhost
  echo ${QMAIL_ME:-"$FQHOSTNAME"}
  ipmeprint | (
    while read ip; do
      str=$(dnsname $ip 2>/dev/null)
      test -n "$str" && echo $str
    done
  )
) | sort -u | tr A-Z a-z >> $QMAILCTL/locals
  QMAIL_LOCALDOMAINS="$FQHOSTNAME localhost"
else
  echo $QMAIL_LOCALDOMAINS | sed 's/[[:space:]]\{1,\}/\n/g' >>$QMAILCTL/locals
fi

# virtualdomains
vdomains=$(
for n in $QMAIL_VIRTUALDOMAINS; do
    echo $n | {
        IFS=':' read domain user
        if test -n "$domain" -a -n "$user"; then
    	echo -n ' '; echo -n $domain; echo -n ':'; echo -n $user
        fi
    }
done
)
if test -z "$vdomains" ; then
    rm -f $QMAILCTL/virtualdomains
else
    cat <<ETX >$QMAILCTL/virtualdomains
$PREAMBLE
ETX
    echo ${vdomains:1} | sed 's/[[:space:]]\{1,\}/\n/g' | sort >>$QMAILCTL/virtualdomains
fi

cat <<ETX >$QMAILCTL/rcpthosts
$PREAMBLE
ETX
if test -n "$vdomains" ; then
    echo $(echo ${vdomains:1} | sed 's/:[^ ]*//g') \
	 $QMAIL_LOCALDOMAINS \
	 $QMAIL_RELAYDOMAINS | \
    sed 's/[[:space:]]\{1,\}/\n/g' | sort -u >>$QMAILCTL/rcpthosts
else
    echo $QMAIL_LOCALDOMAINS $QMAIL_RELAYDOMAINS | \
    sed 's/[[:space:]]\{1,\}/\n/g' | sort -u >>$QMAILCTL/rcpthosts
fi

# bouncefrom
test -z "$QMAIL_BOUNCEFROM" && \
    rm -f $QMAILCTL/bouncefrom || \
    echo $QMAIL_BOUNCEFROM >$QMAILCTL/bouncefrom

# concurrencylocal
concurrency=$(echo $QMAIL_CONCURRENCYLOCAL | sed -e 's/[^0-9]//g')
test -z "$concurrency" && \
    rm -f $QMAILCTL/concurrencylocal || \
    echo $concurrency >$QMAILCTL/concurrencylocal

# concurrencyremote
concurrency=$(echo $QMAIL_CONCURRENCYREMOTE | sed -e 's/[^0-9]//g')
test -z "$concurrency" && \
    rm -f $QMAILCTL/concurrencyremote || \
    echo $concurrency >$QMAILCTL/concurrencyremote

# doublebounceto
test -z "$QMAIL_DOUBLEBOUNCETO" && \
    rm -f $QMAILCTL/doublebounceto || \
    echo $QMAIL_DOUBLEBOUNCETO >$QMAILCTL/doublebounceto

# queuelifetime
time=$(echo $QMAIL_QUEUELIFETIME | sed -e 's/[^0-9]//g')
test -z "$time" -o "$time" -eq 0 && \
    rm -f $QMAILCTL/queuelifetime || \
    echo $time >$QMAILCTL/queuelifetime

# timeoutconnect
time=$(echo $QMAIL_TIMEOUTCONNECT | sed -e 's/[^0-9]//g')
test -z "$time" && \
    rm -f $QMAILCTL/timeoutconnect || \
    echo $time >$QMAILCTL/timeoutconnect

# qmqpservers
if test -z "$QMAIL_QMQPSERVERS" ; then
    rm -f $QMAILCTL/qmqpservers
else
    cat <<ETX >$QMAILCTL/qmqpservers
$PREAMBLE
ETX
    echo $QMAIL_QMQPSERVERS | sed 's/[[:space:]]\{1,\}/\n/g' >>$QMAILCTL/qmqpservers
fi
