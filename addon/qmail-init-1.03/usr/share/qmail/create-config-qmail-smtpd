#!/bin/sh
#
# check if we are started as root
# only one of UID and USER must be set correctly
#
if test "$UID" != 0 -a "$USER" != root; then
    echo >&2 "You must be root to start $0."
    exit 1
fi

#
# check for /etc/sysconfig/qmail
#
if test ! -s /etc/sysconfig/qmail ; then
    echo >&2 "No /etc/sysconfig/qmail found."
    exit 1
fi
. /etc/sysconfig/qmail

test "$QMAIL_CREATE_CONFIG" = yes || exit 0

if test -s /etc/sysconfig/mail ; then
    . /etc/sysconfig/mail
    test "$MAIL_CREATE_CONFIG" = yes || exit 0
fi

#
# set qmail config dirs
#
QMAILCTL="/etc/qmail/control"
SMTPDDIR="${1:-/etc/qmail-smtpd}"
SMTPDENV="$SMTPDDIR/env"

#
# define preamble of config files
#
PREAMBLE="#
#
# Automatically generated on $(env LANG=C date)
#
# PLEASE DO NOT EDIT THIS FILE
#
# Instead edit /etc/sysconfig/qmail and restart the server.
#
#"

umask 022

test -z "$SMTP_ADDRESS" -o "$SMTP_ADDRESS" = 0 && \
    echo -n >"$SMTPDENV/ADDRESS" || \
    cat >"$SMTPDENV/ADDRESS" <<ETX
$SMTP_ADDRESS
#
# IP address the SMTP daemon should bind to on this host.
# Default is "0", which means to listen on all addresses of this host.
$PREAMBLE
ETX
    
test -z "$SMTP_PORT" -o "$SMTP_PORT" = 0 && \
    echo -n >"$SMTPDENV/PORT" || \
    cat >"$SMTPDENV/PORT" <<ETX
$SMTP_PORT
#
# Port number or name (from /etc/services) for the smtp daemon.
$PREAMBLE
ETX

# localname
if test -z "$SMTP_LOCALNAME" ; then
    test -s /etc/HOSTNAME && \
	cp /etc/HOSTNAME "$SMTPDENV/LOCALNAME" || \
	(hostname -f | grep '\.' || echo 0) >"$SMTPDENV/LOCALNAME"
else
    echo $SMTP_LOCALNAME >"$SMTPDENV/LOCALNAME"
fi
cat >>"$SMTPDENV/LOCALNAME" <<ETX
#
# Set local hostname to keep tcpserver from looking it up in DNS.
# A common choice for localname is 0. To avoid loops, you must use this
# option for servers on TCP port 53.
$PREAMBLE
ETX

# concurrency
concurrency=$(echo $SMTP_CONCURRENCY | sed -e 's/[^0-9]//g')
test -z "$concurrency" -o "$concurrency" -eq 0 && \
    echo -n >"$SMTPDENV/CONCURRENCY" || \
    cat >"$SMTPDENV/CONCURRENCY" <<ETX
$concurrency
#
# Maximum number of simultaneous smtp daemon processes.
$PREAMBLE
ETX

# timeout
timeout=$(echo $SMTP_TIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" -o "$timeout" -eq 0 && \
    rm -f $QMAILCTL/timeoutsmtpd || \
    echo $timeout >$QMAILCTL/timeoutsmtpd

# tcprules
tcprulesdir=$SMTPDDIR/rules
cat <<ETX >$tcprulesdir/data
$PREAMBLE
ETX
if test "$SMTPD_LISTEN_REMOTE" == yes; then
    if test -z "$SMTP_RELAYFROMIP" ; then
	test -s $QMAILCTL/smtp-rbl.rules && \
	    cat $QMAILCTL/smtp-rbl.rules >>$tcprulesdir/data
    else
	echo "$SMTP_RELAYFROMIP " | \
	    sed -e 's/[[:space:]]\{1,\}/:allow,RELAYCLIENT=""\n/g' | \
	    sort -u \
	    >>$tcprulesdir/data
	test -s $QMAILCTL/smtp-rbl.rules && \
	    cat $QMAILCTL/smtp-rbl.rules >>$tcprulesdir/data
    fi
    echo ":allow" >>$tcprulesdir/data
else
    cat <<ETX >>$tcprulesdir/data
127.0.0.:allow,RELAYCLIENT=""
:deny
ETX
fi
( cd $tcprulesdir; tcprules data.cdb data.tmp <data )

# message size limits
size=$(echo $SMTP_DATABYTES | sed -e 's/[^0-9]//g')
test -z "$size" && \
    echo -n >$SMTPDENV/DATABYTES || \
    cat >$SMTPDENV/DATABYTES <<ETX
$size
#
# Maximum number of bytes allowed in a message. If a message exceeds this
# limit, smtpd returns a permanent error code to the client; in contrast,
# if the disk is full or smtpd hits a resource limit, smtpd returns a
# temporary error code. No limit is in effect if this file does not exist.

# Counts bytes as stored on disk, not as transmitted through the network.
# It does not count the smtpd Received line, the qmail-queue Received
# line, or the envelope.
$PREAMBLE
ETX

# RBLs
test -z "$SMTP_RBLHOSTS" && \
echo -n >$SMTPDENV/RBLHOSTS || \
cat >$SMTPDENV/RBLHOSTS <<ETX
$SMTP_RBLHOSTS
#
# List of hosts that blacklist client IP addresses
$PREAMBLE
ETX

# RBL timeout
timeout=$(echo $SMTP_RBLTIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" && \
echo -n >$SMTPDENV/RBLTIMEOUT || \
cat >$SMTPDENV/RBLTIMEOUT <<ETX
$timeout
#
# Timeout in seconds for rblsmtpd
$PREAMBLE
ETX

# memory limits
limit=$(echo $SMTP_LIMIT | sed -e 's/[^0-9]//g')
test -z "$limit" && \
    echo -n >$SMTPDENV/LIMIT || \
    cat >$SMTPDENV/LIMIT <<ETX
$limit
#
# Memory limit in bytes for daemon.
# Important: SSL enabled tcpserver needs a lot of memory!
$PREAMBLE
ETX

# CHKRCPT
test "$SMTP_CHKRCPT" != yes && \
echo -n >$SMTPDENV/CHKRCPT || \
cat >$SMTPDENV/CHKRCPT <<ETX
1
#
# let qmail-smtpd verify recipient address
$PREAMBLE
ETX
