#!/bin/sh
#
# check if we are started as root
# only one of UID and USER must be set correctly
#
if test "$UID" != 0 -a "$USER" != root; then
    echo "You must be root to start $0."
    exit 1
fi

r=$ROOT

#
# check for /etc/sysconfig/vmailmgr
#
test -f $r/etc/sysconfig/vmailmgr || {
    echo "No /etc/sysconfig/vmailmgr found."
    exit 1
}
. $r/etc/sysconfig/vmailmgr

test "$ENABLE_SUSECONFIG_VMAILMGR" = yes || {
    echo "SuSEconfig.vmailmgr is disabled in /etc/sysconfig/vmailmgr. Exiting."
    exit 0
}

#
# set vmailmgr config dir
#
VMAILMGRENV="$r/etc/vmailmgr/env"

#
# define preamble of config files
#
PREAMBLE="#
#
# Automatically generated by SuSEconfig on `env LANG=C date`
#
# PLEASE DO NOT EDIT THIS FILE
#"

#
# load special SuSEconfig functions
#
test -f $r/lib/YaST/SuSEconfig.functions || {
    echo "ERROR - can not find $r/lib/YaST/SuSEconfig.functions!!"
    echo "This should not happen.  Exit..."
    exit 1
}
. $r/lib/YaST/SuSEconfig.functions

umask 022

# Try to get a valid hostname...
fqhostname=`/bin/hostname -f | tr A-Z a-z`
# check whether hostname contains at least one dot...
echo $fqhostname | grep "\." >/dev/null || fqhostname=""

test -z "$fqhostname" && {
    # still no valid hostname? Then read /etc/HOSTNAME
    test -s $r/etc/HOSTNAME && fqhostname="`head -1 $r/etc/HOSTNAME`"
    # check whether hostname contains at least one dot...
    echo $fqhostname | grep "\." >/dev/null || fqhostname=""
    # still no valid hostname? :-( set hostname to Qmail's ME setting
    test -z "$fqhostname" && fqhostname="`head -1 /etc/qmail/control/me`"
}

#
# set the fully-qualified name of the current host.
#
test -z "$fqhostname" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_LOCALNAME || \
    cat >$VMAILMGRENV/VMAILMGRTCP_LOCALNAMEY <<ETX
$fqhostname
#
# fully-qualified name of the current host
$PREAMBLE
ETX

# connection concurrency
concurrency="`echo $VMAILMGRTCP_CONCURRENCY | sed -e 's/[^0-9]//g'`"
test -z "$concurrency" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_CONCURRENCY || \
    cat >$VMAILMGRENV/VMAILMGRTCP_CONCURRENCY <<ETX
$concurrency
#
# Maximum number of simultaneous vmailmgr daemon processes.
$PREAMBLE
ETX

# IP address for binding
test -z "$VMAILMGRTCP_ADDRESS" -o "$VMAILMGRTCP_ADDRESS" = "0" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_ADDRESS || \
    cat >$VMAILMGRENV/VMAILMGRTCP_ADDRESS <<ETX
$VMAILMGRTCP_ADDRESS
#
# IP address that daemon should use - binds to all devices if none given
$PREAMBLE
ETX

# Port number
test -z "$VMAILMGRTCP_PORT" -o "$VMAILMGRTCP_PORT" = "0" && \
    rm -f $QMAILENV/VMAILMGRTCP_PORT || \
    cat >$QMAILENV/VMAILMGRTCP_PORT <<ETX
$VMAILMGRTCP_PORT
#
# Port number for the vmailmgr tcp daemon (default 322)
$PREAMBLE
ETX

# tcprules(1) file
test -z "$VMAILMGRTCP_TCPRULES" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_TCPRULES || \
    cat >$VMAILMGRENV/VMAILMGRTCP_TCPRULES <<ETX
$VMAILMGRTCP_TCPRULES
#
# tcprules(1) file for restricting tcp access to certain hosts
$PREAMBLE
ETX

# data segment limit
limit="`echo $VMAILMGRTCP_LIMITDATA | sed -e 's/[^0-9]//g'`"
test -z "$limit" -o "$limit" -eq "0" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_LIMITDATA || \
    cat >$VMAILMGRENV/VMAILMGRTCP_LIMITDATA <<ETX
$limit
#
# Limit data segment size of vmailmgrd on a tcp socket.
$PREAMBLE
ETX

# cpu time limit
limit="`echo $VMAILMGRTCP_LIMITCPU | sed -e 's/[^0-9]//g'`"
test -z "$limit" -o "$limit" -eq "0" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_LIMITCPU || \
    cat >$VMAILMGRENV/VMAILMGRTCP_LIMITCPU <<ETX
$limit
#
# Limit the CPU time in seconds for vmailmgrd on a tcp socket.
# The default of "0" means no cpu limit.
$PREAMBLE
ETX

# multilog
size="`echo $VMAILMGRTCP_LOGSIZE | sed -e 's/[^0-9]//g'`"
test -z "$size" -o "$size" -eq "0" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_LOGSIZE || \
    cat >$VMAILMGRENV/VMAILMGRTCP_LOGSIZE <<ETX
$size
# sets the maximum file size for subsequent dir actions. multilog will
# decide that current is big enough if current has size bytes. (multilog
# will also decide that current is big enough if it sees a newline within
# 2000 bytes of the maximum file size; it tries to finish log files at line
# boundaries.) size must be between 4096 and 16777215.
$PREAMBLE
ETX

num="`echo $VMAILMGRTCP_LOGNUM | sed -e 's/[^0-9]//g'`"
test -z "$num" -o "$num" -eq "0" && \
    rm -f $VMAILMGRENV/VMAILMGRTCP_LOGNUM || \
    cat >$VMAILMGRENV/VMAILMGRTCP_LOGNUM <<ETX
$num
# sets the number of log files for subsequent dir actions. After renaming
# current, if multilog sees num or more old log files, it removes the old
# log file with the smallest timestamp. num must be at least 2.
$PREAMBLE
ETX

test -L /service/vmailmgrd && \
	svc -t /service/vmailmgrd && \
	svc -t /service/vmailmgrd/log

#
# end of file SuSEconfig.vmailmgrd
#
