#!/bin/sh
#
# check if we are started as root
# only one of UID and USER must be set correctly
#
if test "$UID" != 0 -a "$USER" != root; then
    echo >&2 "You must be root to start $0."
    exit 1
fi

#
# check for /etc/sysconfig/mailfront
#
if test ! -f /etc/sysconfig/mailfront ; then
    echo >&2 "No /etc/sysconfig/mailfront found."
    exit 1
fi 
. /etc/sysconfig/mailfront

test "$MAILFRONT_CREATE_CONFIG" = yes || exit 0

# this file contains generic mail setup information
if test -s /etc/sysconfig/mail ; then
    . /etc/sysconfig/mail
    test "$MAIL_CREATE_CONFIG" = yes || exit 0
fi

#
# set qmail config dirs
#
POP3SDDIR="${1:-/etc/mailfront-pop3sd}"
POP3SDENV="$POP3SDDIR/env"

#
# define preamble of config files
#
PREAMBLE="#
#
# Automatically generated on $(env LANG=C date)
#
# PLEASE DO NOT EDIT THIS FILE
#
# Instead edit /etc/sysconfig/mailfront and restart the server.
#
#"

umask 022

test -z "$POP3S_ADDRESS" -o "$POP3S_ADDRESS" = 0 && \
    echo -n >"$POP3SDENV/ADDRESS" || \
    cat >"$POP3SDENV/ADDRESS" <<ETX
$POP3S_ADDRESS
#
# IP address the POP3 daemon should bind to on this host.
# Default is "0", which means to listen on all addresses of this host.
$PREAMBLE
ETX
    
test -z "$POP3S_PORT" -o "$POP3S_PORT" -eq 0 && \
    echo -n >"$POP3SDENV/PORT" || \
    cat >"$POP3SDENV/PORT" <<ETX
$POP3S_PORT
#
# Port number or name (from /etc/services) for the pop3 daemon.
$PREAMBLE
ETX

if test -z "$POP3S_LOCALNAME" ; then
    test -s /etc/HOSTNAME && \
	cp /etc/HOSTNAME "$POP3SDENV/LOCALNAME" || \
	(hostname -f | grep '\.' || echo 0) >"$POP3SDENV/LOCALNAME"
else
    echo $POP3S_LOCALNAME >"$POP3SDENV/LOCALNAME"
fi
cat >>"$POP3SDENV/LOCALNAME" <<ETX
#
# Set local hostname to keep tcpserver from looking it up in DNS.
# A common choice for localname is 0. To avoid loops, you must use this
# option for servers on TCP port 53.
$PREAMBLE
ETX

# concurrency
concurrency=$(echo $POP3S_CONCURRENCY | sed -e 's/[^0-9]//g')
test -z "$concurrency" -o "$concurrency" -eq 0 && \
    echo -n >"$POP3SDENV/CONCURRENCY" || \
    cat >"$POP3SDENV/CONCURRENCY" <<ETX
$concurrency
#
# Maximum number of simultaneous pop3 daemon processes.
$PREAMBLE
ETX

function ssl_config() {
    test -s "$1" -a -s "$2" && return 0
    test -x /usr/bin/openssl || return 1
    test -s "$POP3SDDIR/ssl/openssl.cnf" || return 1

    oldmask=$(umask)
    umask 027

    /bin/dd if=/dev/urandom of="$POP3SDDIR/ssl/openssl.rand" count=1 2>/dev/null
    /usr/bin/openssl req -newkey rsa:1024 -x509 -days 1461 -nodes \
	-config "$POP3SDDIR/ssl/openssl.cnf" -rand "$POP3SDDIR/ssl/openssl.rand" \
	-out "$1" -keyout "$2" && \
    /usr/bin/openssl x509 -subject -dates -fingerprint -noout -in "$1" && \
    /bin/chmod 0644 "$1" && \
    /bin/chown root:nogroup "$2" || \
    /bin/rm -f "$1" "$2" "$POP3SDDIR/ssl/openssl.rand"

    test -s "$1" -a -n "$3" && \
	/usr/bin/openssl gendh -rand "$POP3SDDIR/ssl/openssl.rand" -out "$3" 1024

    umask $oldmask
    /bin/rm -f "$POP3SDDIR/ssl/openssl.rand"

    test -s "$1"
}

# SSL certificate and private key
: ${POP3S_CERTFILE:=$POP3SDDIR/ssl/certificate.pem}
: ${POP3S_KEYFILE:=$POP3SDDIR/ssl/privatekey.pem}

if ssl_config "$POP3S_CERTFILE" "$POP3S_KEYFILE" "$POP3S_DHFILE"
then
    cat >"$POP3SDENV/CERTFILE" <<ETX
$POP3S_CERTFILE
#
# Path to SSL certificate
$PREAMBLE
ETX

    cat >"$POP3SDENV/KEYFILE" <<ETX
$POP3S_KEYFILE
#
# Path to SSL private key
$PREAMBLE
ETX

    test ! -s "$POP3S_DHFILE" && \
	echo -n >"$POP3SDENV/DHFILE" || \
	cat >"$POP3SDENV/DHFILE" <<ETX
$POP3S_DHFILE
#
# Path to Diffie-Hellmann-Parameter file
$PREAMBLE
ETX
else
    echo -n >"$POP3SDENV/CERTFILE"
    echo -n >"$POP3SDENV/KEYFILE"
    echo -n >"$POP3SDENV/DHFILE"
fi

# Timeouts
timeout=$(echo $POP3S_TIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" -o "$timeout" -eq 0 && \
    echo -n >"$POP3SDENV/TIMEOUT" || \
    cat >"$POP3SDENV/TIMEOUT" <<ETX
$timeout
#
# Times out connections after value seconds of inactivity.
$PREAMBLE
ETX

timeout=$(echo $POP3S_SESSION_TIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" -o "$timeout" -eq 0 && \
    echo -n >"$POP3SDENV/SESSION_TIMEOUT" || \
    cat >"$POP3SDENV/SESSION_TIMEOUT" <<ETX
$timeout
#
# Times out connections after value seconds of inactivity.
$PREAMBLE
ETX

# authentication
cat >"$POP3SDENV/CVM_SASL_PLAIN" <<ETX
cvm-${POP3S_CVM_MODE:-command}:${POP3S_CVM_LOCATION:-cvm-unix}
#
# CVM mode and module for POP3 authentication
$PREAMBLE
ETX

# TCP rules
tcprulesdir=$POP3SDIR/rules
if test -n "$POP3S_ALLOWFROMIP" || grep ^[0-9] "$tcprulesdir/include" &>/dev/null
then
    cat >$tcprulesdir/data <<ETX
$PREAMBLE
ETX
    ipmeprint | sort -u >>$tcprulesdir/data
    echo $POP3S_ALLOWFROMIP | sed 's/[[:space:]]\{1,\}/\n/g' | sort -u \
	>>$tcprulesdir/data
    test -r "$tcprulesdir/include" && \
	grep ^[0-9] "$tcprulesdir/include" >>$tcprulesdir/data
    echo :deny >>$tcprulesdir/data
    ( cd $tcprulesdir; tcprules data.cdb data.tmp <data )
else
    rm -f $tcprulesdir/data $tcprulesdir/data.cdb
fi

# memory limits
limit=$(echo $POP3S_LIMIT | sed -e 's/[^0-9]//g')
test -z "$limit" -o "$limit" -eq 0 && \
    echo -n >"$POP3SDENV/LIMIT" || \
    cat >"$POP3SDENV/LIMIT" <<ETX
$POP3S_LIMIT
#
# memory limit in bytes for daemon
$PREAMBLE
ETX
