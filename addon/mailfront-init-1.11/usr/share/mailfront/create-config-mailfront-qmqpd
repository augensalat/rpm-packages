#!/bin/sh
#
# check if we are started as root
# only one of UID and USER must be set correctly
#
if test "$UID" != 0 -a "$USER" != root; then
    echo >&2 "You must be root to start $0."
    exit 1
fi

#
# check for /etc/sysconfig/mailfront
#
if test ! -f /etc/sysconfig/mailfront ; then
    echo >&2 "No /etc/sysconfig/mailfront found."
    exit 1
fi 
. /etc/sysconfig/mailfront

test "$MAILFRONT_CREATE_CONFIG" = yes || exit 0

# this file contains generic mail setup information
if test -s /etc/sysconfig/mail ; then
    . /etc/sysconfig/mail
    test "$MAIL_CREATE_CONFIG" = yes || exit 0
fi

#
# set qmail config dirs
#
QMQPDDIR="${1:-/etc/mailfront-qmqpd}"
QMQPDENV="$QMQPDDIR/env"

#
# define preamble of config files
#
PREAMBLE="#
#
# Automatically generated on $(env LANG=C date)
#
# PLEASE DO NOT EDIT THIS FILE
#
# Instead edit /etc/sysconfig/mailfront and restart the server.
#
#"

umask 022

test -z "$QMQP_ADDRESS" -o "$QMQP_ADDRESS" = 0 && \
    echo -n >"$QMQPDENV/ADDRESS" || \
    cat >"$QMQPDENV/ADDRESS" <<ETX
$QMQP_ADDRESS
#
# IP address the QMQP daemon should bind to on this host.
# Default is "0", which means to listen on all addresses of this host.
$PREAMBLE
ETX
    
test -z "$QMQP_PORT" -o "$QMQP_PORT" = 0 && \
    echo -n >"$QMQPDENV/PORT" || \
    cat >"$QMQPDENV/PORT" <<ETX
$QMQP_PORT
#
# Port number or name (from /etc/services) for the qmqp daemon.
$PREAMBLE
ETX

if test -z "$QMQP_LOCALNAME" ; then
    test -s /etc/HOSTNAME && \
	cp /etc/HOSTNAME "$QMQPDENV/LOCALNAME" || \
	(hostname -f | grep '\.' || echo 0) >"$QMQPDENV/LOCALNAME"
else
    echo $QMQP_LOCALNAME >"$QMQPDENV/LOCALNAME"
fi
cat >>"$QMQPDENV/LOCALNAME" <<ETX
#
# Set local hostname to keep tcpserver from looking it up in DNS.
# A common choice for localname is 0. To avoid loops, you must use this
# option for servers on TCP port 53.
$PREAMBLE
ETX

# Concurrency
concurrency=$(echo $QMQP_CONCURRENCY | sed -e 's/[^0-9]//g')
test -z "$concurrency" -o "$concurrency" -eq 0 && \
    echo -n >"$QMQPDENV/CONCURRENCY" || \
    cat >"$QMQPDENV/CONCURRENCY" <<ETX
$concurrency
#
# Maximum number of simultaneous qmqp daemon processes.
$PREAMBLE
ETX

# Memory limits
limit=$(echo $QMQP_LIMIT | sed -e 's/[^0-9]//g')
test -z "$limit" -o "$limit" -eq 0 && \
    echo -n >"$QMQPDENV/LIMIT" || \
    cat >"$QMQPDENV/LIMIT" <<ETX
$limit
#
# memory limit in bytes for daemon
$PREAMBLE
ETX

# Timeouts
timeout=$(echo $QMQP_TIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" -o "$timeout" -eq 0 && \
    echo -n >"$QMQPDENV/TIMEOUT" || \
    cat >"$QMQPDENV/TIMEOUT" <<ETX
$timeout
#
# Times out connections after value seconds of inactivity.
$PREAMBLE
ETX

timeout=$(echo $QMQP_SESSION_TIMEOUT | sed -e 's/[^0-9]//g')
test -z "$timeout" -o "$timeout" -eq 0 && \
    echo -n >"$QMQPDENV/SESSION_TIMEOUT" || \
    cat >"$QMQPDENV/SESSION_TIMEOUT" <<ETX
$timeout
#
# Times out connections after value seconds of inactivity.
$PREAMBLE
ETX

# TCP rules for relaying
tcprulesdir=$QMQPDDIR/rules
cat >$tcprulesdir/data <<ETX
$PREAMBLE
ETX
ipmeprint | grep -v ^0\.0\.0\.0$ | sort -u >>$tcprulesdir/data
if test -n "$QMQP_RELAYFROMIP" ; then
    echo $QMQP_RELAYFROMIP | sed 's/[[:space:]]\{1,\}/\n/g' | sort -u \
	>>$tcprulesdir/data
fi
test -r "$tcprulesdir/include" && \
    grep ^[0-9] "$tcprulesdir/include" >>$tcprulesdir/data
echo :deny >>$tcprulesdir/data
( cd $tcprulesdir; tcprules data.cdb data.tmp <data )
